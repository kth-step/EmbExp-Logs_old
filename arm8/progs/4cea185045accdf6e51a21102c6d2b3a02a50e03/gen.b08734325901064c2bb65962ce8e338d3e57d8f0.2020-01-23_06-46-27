prog_gen_rand::
Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

Skipping test case due to exception in pipleline:
HOL_ERR {message = "not a var", origin_function = "dest_var", origin_structure = "Term"}
***

